#!/bin/bash

# Устанавливаем базовый путь, где находится структура каталогов
BASE_DIR="/project" # Для запуска в винде прописать полный путь и сделать скрипт исполняемым в консоли Баш

# Получаем текущую дату и время в секундах с начала эпохи Unix (1970-01-01 00:00:00 UTC)
# Это нужно для последующего сравнения с датами в названиях каталогов
now=$(date +%s)

# Используем команду `find`, чтобы найти все директории, соответствующие шаблону */site*
# Это включает директории вида /project/data11/site1, /project/data21/site3 и т.п.
# -type d гарантирует, что будут выбраны только директории
find "$BASE_DIR" -type d -path "*/site*" | while read -r site_dir; do
  # Цикл for перебирает все объекты (файлы и директории) внутри директории site_dir
  for date_dir in "$site_dir"/*; do
    # Проверяем, что:
    # 1. Объект действительно является директорией (-d "$date_dir")
    # 2. Имя объекта (basename) соответствует формату даты: YYYY-MM-DD
    #    Регулярное выражение: ^[0-9]{4}-[0-9]{2}-[0-9]{2}$
    if [[ -d "$date_dir" && $(basename "$date_dir") =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]; then
      # Извлекаем имя директории (дату) без полного пути
      dir_date=$(basename "$date_dir")

      # Преобразуем эту дату в количество секунд с начала эпохи Unix
      # Это позволит нам сравнивать её с текущим временем
      dir_date_sec=$(date -d "$dir_date" +%s)

      # Вычисляем разницу между текущей датой и датой из имени директории в днях
      # Разница в секундах делится на 86400 (число секунд в одном дне)
      diff_days=$(( (now - dir_date_sec) / 86400 ))

      # Если разница больше 3 дней — директория устарела, удаляем её
      if (( diff_days > 3 )); then
        # Сообщаем пользователю, какую директорию удаляем и насколько она старая
        echo "Удаляем каталог: $date_dir (старше $diff_days дней)"
        
        # Удаляем директорию рекурсивно и без подтверждения
        rm -rf "$date_dir"
      fi
    fi
  done
done
